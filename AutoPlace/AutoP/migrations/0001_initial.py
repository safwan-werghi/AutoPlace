# Generated by Django 4.2.23 on 2025-08-22 18:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('phone_verified', models.BooleanField(default=False)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('zip_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, default='USA', max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp')], default='email', max_length=20)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('dealer_license', models.CharField(blank=True, max_length=100)),
                ('is_verified_seller', models.BooleanField(default=False)),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('preferred_makes', models.CharField(blank=True, max_length=500)),
                ('preferred_body_styles', models.CharField(blank=True, max_length=200)),
                ('cars_listed', models.IntegerField(default=0)),
                ('cars_sold', models.IntegerField(default=0)),
                ('cars_bought', models.IntegerField(default=0)),
                ('total_inquiries', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand', models.CharField(max_length=200)),
                ('Model', models.CharField(max_length=200)),
                ('Year', models.IntegerField()),
                ('price', models.IntegerField()),
                ('mileage', models.IntegerField()),
                ('Condition', models.CharField(choices=[('New', 'New'), ('Used', 'Used'), ('Certified', 'Certified Pre-owned')], default='Used', max_length=20)),
                ('Color', models.CharField(max_length=20)),
                ('Fuel_Type', models.CharField(choices=[('Gasoline', 'Gasoline'), ('Diesel', 'Diesel'), ('Electric', 'Electric')], default='Gasoline', max_length=20)),
                ('description', models.CharField(max_length=250)),
                ('photo1_path', models.CharField(max_length=200)),
                ('photo2_path', models.CharField(max_length=200)),
                ('photo3_path', models.CharField(max_length=200)),
                ('photo4_path', models.CharField(max_length=200)),
                ('photo5_path', models.CharField(max_length=200)),
                ('photo6_path', models.CharField(max_length=200)),
                ('photo7_path', models.CharField(max_length=200)),
                ('photo8_path', models.CharField(max_length=200)),
                ('mpg_city', models.IntegerField()),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Pending', 'Pending'), ('Sold', 'Sold')], default='Available', max_length=20)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Buyer', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Seller', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
